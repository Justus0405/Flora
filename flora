#!/bin/bash
export DIRMAIN="$HOME/.config/flora"

## FUNCS

# GENERAL FUNCS

HELPER() {
	echo -e " usage: flora ..."
	echo -e "	General Usage:"
	echo -e "		-h | --help	= help message"
	echo -e "		-a | --about	= about message"
	echo -e "		-p | --pass	= set server password"
	echo -e "		-s | --server	= run in server mode"
	echo -e "		   |		= run in client mode"
	echo -e ""
}
ABOUT() {
	echo -e " \e[1;35mFlora [v0.2]\e[0m"
	echo -e " By Tina_lel"
	echo -e " Special Thanks:"
	echo -e "	\e[0;35mJustus0405\e[0m"
	echo -e ""
	echo -e " GitHub: https://github.com/Tina-lel/Flora"
	echo -e ""
}
GENERAL_CONFIGURATION() {
	if [[ ! -d "$DIRMAIN" ]];
	then
		mkdir -p "$DIRMAIN"
		mkdir -p "$DIRMAIN/tmp"
		mkdir -p "$DIRMAIN/server"
		touch "$DIRMAIN/server/main"
		touch "$DIRMAIN/server/send"
		touch "$DIRMAIN/server/motd"
		touch "$DIRMAIN/server.cfg"
		touch "$DIRMAIN/client.cfg"
		echo -e "# SERVER CONFIG\n\nOPORT=\"1234\"\nIPORT=\"1235\"\nCOMPORT=\"1236\"\n\nMOTD=\"cat \$DIRMAIN/server/motd\"" > "$DIRMAIN/server.cfg"
		echo -e "# GENERAL CONFIG\nNAME=\"User\"\nNAME_COLOR=\"\\\e[1;34m\"\nACCENT_COLOR=\"\\\e[7;32m\"\n\n# KEYBINDS\nUP=\"w\"\nDOWN=\"s\"\n\n# MISC CONFIG\nSOCAT_INTERVAL=\"0.25\"\n\n# SERVER CONFIG\nFUNCS=( )\n" > "$DIRMAIN/client.cfg"
		echo -e "Welcome to \\\e[1;35mFlora\\\e[0m" > "$DIRMAIN/server/motd"
	fi
}
LOGO() {
	echo -e ""
	echo -e "       \e[1;35mFlora\e[0m"
	echo -e "    by Tina_lel   \n"
}

# SERVER FUNCS

LOAD_SERVER_CONFIG() {
	echo -e " \e[2;37mLoading Config $DIRMAIN/server.cfg...\e[0m"
	source "$DIRMAIN/server.cfg"
}
ENCRYPT_MAIN() {
	gpg -c --cipher-algo AES256 --batch --yes --passphrase-file "$DIRMAIN/server/pass" "$DIRMAIN/server/main" > /dev/null 2>&1
}
COMPORT_HEARTBEAT() {
	while :
	do
		socat -d0 tcp-l:$COMPORT,reuseaddr,reuseport,fork open:"$DIRMAIN/server/send" &
		SOCAT_PID=$!
		sleep 1.25
		kill $SOCAT_PID
		break
	done &
}
WRITE_MOTD() {
	#this shit took way too long. thanks grep and sed

	echo -e -n "───┤ MOTD ├──────────────\n" >> "$DIRMAIN/server/main.tmp"
	echo -e "" >> "$DIRMAIN/server/main.tmp"
	$MOTD >> "$DIRMAIN/server/main.tmp"
	echo -e "" >> "$DIRMAIN/server/main.tmp"
	echo -e -n "───┤ MOTD END ├──────────\n\n" >> "$DIRMAIN/server/main.tmp"

	if [[ "$(head -n 1 $DIRMAIN/server/main)" == "───┤ MOTD ├──────────────" ]];
	then
		sed "1,$(( $(sed '/───┤ MOTD END ├──────────/q' $DIRMAIN/server/main | wc -l) + 1 ))d" "$DIRMAIN/server/main" >> "$DIRMAIN/server/main.tmp"
	else
		cat "$DIRMAIN/server/main" >> "$DIRMAIN/server/main.tmp"
	fi

	mv "$DIRMAIN/server/main.tmp" "$DIRMAIN/server/main"
}
SERVER_EXITER() {
	killall "socat" > /dev/null 2>&1
	exit
}

# CLIENT FUNCS

LOAD_CLIENT_CONFIG() {
	echo -e " \e[2;37mLoading Config $DIRMAIN/client.cfg...\e[0m"
	source "$DIRMAIN/client.cfg"
}
MOTD_VIEWER() {
	socat -u tcp:$HOST:$OPORT - | gpg -q -d -o "$DIRMAIN/tmp/main" --cipher-algo AES256 --batch --yes --passphrase $PASS -
	TESTSHIT="$?"
	if [[ "$TESTSHIT" != 0 ]];
	then
		break
	fi
	if [[ "$(head -n 1 $DIRMAIN/tmp/main)" == "───┤ MOTD ├──────────────" ]];
	then
		echo -e "$(sed '/MOTD END/q' $DIRMAIN/tmp/main)\nPress Q to continue..." | less -c -R
	else
		echo -e "No Motd found. Press Q to continue..." | less -c -R
	fi
	rm "$DIRMAIN/tmp/main"
}
CHAT_GET() {
	socat -u tcp:$HOST:$OPORT - | gpg -q -d -o "$DIRMAIN/tmp/main" --cipher-algo AES256 --batch --yes --passphrase $PASS -
	clear
	echo -e "$(cat $DIRMAIN/tmp/main)"
	rm "$DIRMAIN/tmp/main"
}
WAIT_LOOP() {
	while :
	do
		socat -d0 tcp:$HOST:$COMPORT,forever,interval="$SOCAT_INTERVAL" - || break
		SOCAT_PID=$!
		CHAT_GET
		sleep 1.25
	done &
	LOOP_PID=$!
}
JOIN_MESSAGE() {
        echo ">> \e[1m\e[3;33m$NAME_COLOR$NAME\e[0m\e[1m\e[3;33m has joined the chat\e[0m << " | gpg -c --cipher-algo AES256 --batch --yes --passphrase $PASS - | socat -U tcp:$HOST:$IPORT -
}
LEAVE_MESSAGE() {
        echo "<< \e[1m\e[3;31m$NAME_COLOR$NAME\e[0m\e[1m\e[3;31m has left the chat\e[0m >> " | gpg -c --cipher-algo AES256 --batch --yes --passphrase $PASS - | socat -U tcp:$HOST:$IPORT -
}
CONTROLS_HELP() {
	printf "\e[s"
	printf "\e[9999;0H"
	printf "${ACCENT_COLOR}| $UP: up | $DOWN: down |\e[0m"
	printf "\e[u"
}
MENU_TEST() {
	FUNCTIONS_NUMBER="$(echo ${FUNCTIONS[@]} | wc -w)"
	echo ""

	printf "\e[s"
	NUM=0
	while [[ $NUM != $FUNCTIONS_NUMBER ]]
	do
		echo -e "${FUNCTIONS[$NUM]}"
		NUM=$(( $NUM + 1 ))
	done
	printf "\e[u"

	LINE=0
	printf "\e[2K\e[100D > ${ACCENT_COLOR} ${FUNCTIONS[$LINE]} \e[0m"
	CONTROLS_HELP
	while :
	do
		read -n 1 -s SELECTION_INPUT
		case $SELECTION_INPUT in
		$UP)
			if [[ $LINE == 0 ]]
			then
				continue
			else
				printf "\e[2K\e[100D${FUNCTIONS[$LINE]}"
				printf "\e[A"
				LINE=$(( $LINE - 1 ))
				printf "\e[2K\e[100D > ${ACCENT_COLOR} ${FUNCTIONS[$LINE]} \e[0m"
			fi
		;;
		$DOWN)
			if [[ $LINE == $(( $FUNCTIONS_NUMBER - 1 )) ]]
			then
				continue
			else
				printf "\e[2K\e[100D${FUNCTIONS[$LINE]}"
				printf "\n"
				LINE=$(( $LINE + 1 ))
				printf "\e[2K\e[100D > ${ACCENT_COLOR} ${FUNCTIONS[$LINE]} \e[0m"
			fi
		;;
		"")
			SELECTION="${FUNCTIONS[LINE]}"
			break
		;;
		*)
		;;
		esac
	done
}
SOCAT_KILLER() {
	kill $LOOP_PID
	kill -9 $SOCAT_PID > /dev/null 2>&1
}
CLIENT_SOFT_EXITER() {
	clear
	printf "\e[?1049l"
	exit
}
CLIENT_EXITER() {
	LEAVE_MESSAGE
	SOCAT_KILLER
	clear
	printf "\e[?1049l"
	exit
}

# Programm Start
GENERAL_CONFIGURATION

case $1 in
	-h | --help)
		HELPER
	;;
	-a | --about)
		ABOUT
	;;
	-p | --pass)
		echo -e "set an encryption password for the server"
		echo -e -n "\e[1;32mPassword >>\e[0m "
		read -r -e PASS
		echo -e $PASS > $DIRMAIN/server/pass
		echo -e "saved Password to \"$DIRMAIN/server/pass\" IN PLAINTEXT!!!"
	;;
	-s | --server)
		LOAD_SERVER_CONFIG

		#traps
		trap "SERVER_EXITER" SIGINT

		if [[ ! -f $DIRMAIN/server/pass ]];
		then
			echo -e " you need to run -p/--pass first, to set an encryption password"
		else
			echo -e " \e[2;37mStarting in Server Mode...\e[0m"
			if [[ "$(head -n 1 $DIRMAIN/server/main)" != "───┤ MOTD ├──────────────" ]];
			then
				echo -e " \e[2;37mWriting Motd...\e[0m"
				WRITE_MOTD
			fi
			if [[ ! -f "$DIRMAIN/server/main.gpg" ]];
			then
				ENCRYPT_MAIN
			fi

			#OUTPUT
			echo -e " \e[2;37mStarting output thread...\e[0m"
			socat -d0 -U tcp-l:$OPORT,fork,reuseaddr,reuseport open:"$DIRMAIN/server/main.gpg" &

			#INPUT
			echo -e " \e[2;37mStarting input thread...\e[0m"
			while :
			do
				socat -d0 -u tcp-l:$IPORT,reuseaddr,reuseport open:"$DIRMAIN/tmp/tmp.gpg",creat || break
				gpg -q -o "$DIRMAIN/tmp/tmp" -d --cipher-algo AES256 --batch --yes --passphrase-file $DIRMAIN/server/pass $DIRMAIN/tmp/tmp.gpg
				GPG_FAIL=$?
				if [[ $GPG_FAIL != "0" ]];
				then
					rm "$DIRMAIN/tmp/tmp.gpg"
					continue
				else
					while IFS= read -r line || [ -n "$line" ]; do

                                                while [[ "$line" =~ \\n ]]; do
                                                        part="${line%%\\n*}"
                                                        rest="${line#*\\n}"
                                                        echo "│ $part" >> "$DIRMAIN/tmp/tmp_converted"
                                                        line="$rest"
                                                done

                                                while [ "${#line}" -gt 100 ]; do
                                                        echo "│ ${line:0:100}" >> "$DIRMAIN/tmp/tmp_converted"
                                                        line="${line:100}"
                                                done

                                                echo "│ $line" >> "$DIRMAIN/tmp/tmp_converted"
                                        done < "$DIRMAIN/tmp/tmp"

                                        echo -e "╭───────────────────────╮" >> $DIRMAIN/server/main
                                        echo -e "│ "`date "+%T | %d.%m.%Y"`" │" >> $DIRMAIN/server/main
                                        echo -e "├───────────────────────╯" >> $DIRMAIN/server/main
                                        cat $DIRMAIN/tmp/tmp_converted  >> $DIRMAIN/server/main
                                        echo -e "╰───────────────────────╼" >> $DIRMAIN/server/main
                                        echo -e "" >> $DIRMAIN/server/main

                                        rm "$DIRMAIN/tmp/tmp"
                                        rm "$DIRMAIN/tmp/tmp_converted"
                                        rm "$DIRMAIN/tmp/tmp.gpg"
                                        ENCRYPT_MAIN
                                        COMPORT_HEARTBEAT
				fi
			done &

			LOGO

			# Server Console
			while :
			do
				read -re -p "Flora Server >> " MAIN
				case $MAIN in
					help)
						echo -e " help	= help message"
						echo -e " info	= show server info"
						echo -e " motd	= write motd"
						echo -e " clear	= clear screen"
						echo -e " exit	= shutdown server"
					;;
					info)
						echo -e " OPORT = $OPORT"
						echo -e " IPORT = $IPORT"
						echo -e " COMPORT = $COMPORT"
					;;
					motd)
						LOAD_SERVER_CONFIG
						echo -e " \e[2;37mWriting Motd...\e[0m"
						WRITE_MOTD
						ENCRYPT_MAIN
						COMPORT_HEARTBEAT
					;;
					clear)
						clear
					;;
					exit)
						SERVER_EXITER
					;;
					"")
					;;
					*)
						echo "No such Command \"$MAIN\", use \"help\" for a list of Commands"
					;;
				esac
			done
		fi
	;;
	"")
		printf "\e[?1049h"

		while :
		do
			trap "CLIENT_SOFT_EXITER" SIGINT

			while :
			do
				clear
				LOAD_CLIENT_CONFIG
				LOGO
				FUNCTIONS=( ${FUNCS[@]} "Add" )
				echo -e "What server to join?"
				MENU_TEST
				clear
				case $SELECTION in
					"Add")
						echo -e "Enter Server info:"
						read -re -p " NAME --> " SRV_NAME
						read -re -p " HOST --> " HOST
						read -re -p " OPORT --> " OPORT
						read -re -p " IPORT --> " IPORT
						read -re -p " COMPORT --> " COMPORT
						if [[ -z $SRV_NAME || -z $HOST || -z $OPORT || -z $IPORT || -z $COMPORT ]];
						then
							echo -e "ERROR: variables cant be empty"
							read -p "Press Enter..."
							continue
						fi
						FUNCS_LINE_RAW="$(grep FUNCS $DIRMAIN/client.cfg)"
						FUNCS_LINE="${FUNCS_LINE_RAW::-2} $SRV_NAME )"
						sed -i -e "s/$FUNCS_LINE_RAW/$FUNCS_LINE/g" "$DIRMAIN/client.cfg"
						echo -e "$SRV_NAME() {\n	HOST=\"$HOST\"\n	OPORT=\"$OPORT\"\n	IPORT=\"$IPORT\"\n	COMPORT=\"$COMPORT\"\n}" >> $DIRMAIN/client.cfg
						continue
					;;
					*)
						$SELECTION
					;;
				esac
				break
			done

			echo -e -n "\e[1;32mPassword for $HOST >>\e[0m "
			read -s -r -e PASS

			trap "CLIENT_EXITER" SIGINT

			MOTD_VIEWER
			clear
			echo -e "Loading..."
			JOIN_MESSAGE
			WAIT_LOOP

			while :
			do
				read -r -e MSG
				case $MSG in
				"!q" | "!quit")
					CLIENT_EXITER
				;;
				"!b" | "!back")
					LEAVE_MESSAGE
					SOCAT_KILLER
					break
				;;
				"!m" | "!motd")
					SOCAT_KILLER
					clear
					echo -e "Loading..."
					MOTD_VIEWER
					WAIT_LOOP
					CHAT_GET
				;;
				"!n" | "!neofetch")
                                        echo "$NAME_COLOR$NAME\e[0m:\n$(neofetch --color_blocks off)" | gpg -c --cipher-algo AES256 --batch --yes --passphrase $PASS - | socat -U tcp:$HOST:$IPORT -
                                ;;
                                "!f" | "!fastfetch")
                                        echo "$NAME_COLOR$NAME\e[0m:\n$(fastfetch)" | gpg -c --cipher-algo AES256 --batch --yes --passphrase $PASS - | socat -U tcp:$HOST:$IPORT -
                                ;;
                                "!w" | "!weather")
                                        echo "$NAME_COLOR$NAME\e[0m:\n$(curl -s wttr.in/?0)" | gpg -c --cipher-algo AES256 --batch --yes --passphrase $PASS - | socat -U tcp:$HOST:$IPORT -
                                ;;
				"!r" | "!refresh")
					CHAT_GET
				;;
				"!h" | "!help")
					SOCAT_KILLER
					clear
					echo -e ""
					echo -e " !m | !motd		= view motd"
					echo -e " !n | !neofetch  	= send neofetch"
					echo -e " !r | !refresh		= refresh chat"
					echo -e " !h | !help		= show this message"
					echo -e " !b | !back		= disconnect and return"
					echo -e " !q | !quit		= disconnect and exit"
					echo -e ""
					read -p "Press Enter..."
					WAIT_LOOP
					CHAT_GET
				;;
				*)
					echo -e "Sending..."
					while :
					do
						echo "$NAME_COLOR$NAME\e[0m: $MSG\e[0m" | gpg -c --cipher-algo AES256 --batch --yes --passphrase $PASS - | socat -U tcp:$HOST:$IPORT -
						SOCAT_FAIL="$?"
						if [[ $SOCAT_FAIL != 0 ]];
						then
							sleep 0.25
							return
						else
							break
						fi
					done
				;;
				esac
			done
		done
	;;
	*)
		echo -e "unknown option \"$1\""
		HELPER
	;;
esac
